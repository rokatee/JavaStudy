/*
■■■ 연산자(Operator) ■■■
	- 비트 단위 연산자
*/

public class Test025
{
	public static void main(String[] args)
	{
		int x = 128;		// 00000000 00000000 00000000 10000000
		
		System.out.printf("x << 3 : %d%n", x << 3);
		// 00000000 00000000 00000100 00000000
		// x << 3 : 1024
		System.out.printf("x * 8  : %d%n", x * 8);
		// x * 3  : 1024

		System.out.printf("x >> 3 : %d%n", x >> 3);
		// 00000000 00000000 00000000 00010000
		// x >> 3 : 16
		System.out.printf("x / 8  : %d%n", x / 8);
		// x / 8  : 16

		System.out.printf("x << 24  : %d%n", x << 24);
		// → x << 24  : -2147483648
		// 10000000 00000000 00000000 00000000			//맨 앞 숫자는 부등이라 양수가 음수로 바뀜

		System.out.printf("x << 32  : %d%n", x << 32);	//128	→ 00000000 00000000 00000000 10000000
														// 비트열을 벗어나면 다시 1의자리로 돌아옴
														// 하지만 원래 자리 전까진 0으로 인식
		System.out.printf("x << 31  : %d%n", x << 31);	// 0	→ 00000000 00000000 00000000 01000000
		System.out.printf("x << 33  : %d%n", x << 33);	// 256	→ 00000000 00000000 00000001 00000000
		


	}
}


/*
실행 결과

x << 3 : 1024
x * 8  : 1024
x >> 3 : 16
x / 8  : 16
x << 24  : -2147483648
x << 32  : 128
x << 31  : 0
x << 33  : 256
계속하려면 아무 키나 누르십시오 . . .
*/