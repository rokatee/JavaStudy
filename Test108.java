/*
■■■ 정렬(Sort) 알고리즘 ■■■
*/

/*
○ 정렬
	: 데이터를 특정한 규칙(기준)에 맞게 순서대로 나열(오름차순, 내림차순)

○ 정렬의 목적
	: 데이터 처리 과정의 편의성이나 가독성을 높이기 위함
	  → 보기 편하려고

○ 정렬의 종류
	: 선택 정렬, 버블 정렬, 삽입 정렬, 힙 정렬, 퀵 정렬, 쉘 정렬.....



버블 정렬(거품 정렬, Bubble Sort)

실행 예)

Source Data : 52 42 12 62 60
Sorted Data : 12 42 52 60 62
계속하려면...
*/

public class Test108
{
	public static void main(String[] args)
	{
		int[] a = {52, 42, 12, 62, 60};
		/*
			52, 42, 12, 62, 60
			==  --
			↓
			42, 52, 12, 62, 60
			    ==  --
				↓
			42, 12, 52, 62, 60
			        ==  --
					↓
			42, 12, 52, 62, 60
			            ==  --
						↓
			42, 12, 52, 60, 62
			-----------------------1회전 종료
			42, 12, 52, 60, 62
			==  --
			↓
			12, 42, 52, 60, 62
				==  --
				↓
			12, 42, 52, 60, 62
					==  --
					↓
			12, 42, 52, 60, 62
			-----------------------2회전 종료
			12, 42, 52, 60, 62
			==  --
			↓
			12, 42, 52, 60, 62
				==  --
				↓
			12, 42, 52, 60, 62
			-----------------------3회전 종료
			12, 42, 52, 60, 62
			==  --
			↓
			12, 42, 52, 60, 62
			-----------------------4회전 종료
		*/
		
		System.out.print("Source Data : ");	
		for (int n : a)
		{
			System.out.print(n + " ");
		}
		System.out.println();


		
		for (int i = 1; i < a.length; i++)			// i → 1    2   3  4 → 뒤에서 비교 대상을 하나씩 줄인다
		{
			for (int j = 0; j < a.length-i; j++)	// j → 0123 012 01 0 → 비교기준자리
			{
				if (a[j] > a[j+1])					// 다음 단계로 넘어갈 때마다 j와 j 옆을 비교하므로
				{									// j와 j+1을 바꿔주는 구문 작성
					// 자리 바꾸기
					a[j]	= a[j]	 ^ a[j+1];
					a[j+1]	= a[j+1] ^ a[j];
					a[j]	= a[j]   ^ a[j+1];
				}
			}
		}



		System.out.print("Sorted Data : ");
		for (int n : a)
		{
			System.out.print(n + " ");
		}
		System.out.println();
	}
}